{"ast":null,"code":"import _slicedToArray from \"D:\\\\MASTER KEE PROJECT\\\\MASTER PROJECT\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\MASTER KEE PROJECT\\\\MASTER PROJECT\\\\client\\\\src\\\\views\\\\FilesContents.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst FilesContents = () => {\n  const _React$useState = React.useState([]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        errors = _React$useState2[0],\n        setError = _React$useState2[1];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        loading = _React$useState4[0],\n        setLoading = _React$useState4[1];\n\n  const _React$useState5 = React.useState([]),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        folders = _React$useState6[0],\n        setFolders = _React$useState6[1];\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const result = await fetch(\"http://localhost:9001/dossier/\", {\n        method: \"GET\",\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await result.json();\n      setTimeout(function () {\n        setLoading(false);\n      }, 1000);\n      setError([]);\n      console.log(errors);\n      return setFolders(data.folders);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n      return setError(error);\n    }\n  };\n\n  React.useEffect(function () {\n    fetchData();\n  }, []);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"font-weight-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Tous les fichiers \"), loading ? React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"loading....\") : React.createElement(\"div\", {\n    className: \"d-flex flex-wrap justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, folders.length > 0 ? folders.map(function (fold) {\n    return React.createElement(\"div\", {\n      key: fold.nom,\n      style: {\n        width: \"48%\"\n      },\n      className: \"border p-2 mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"img-circle\",\n      alt: \"image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"text-primary text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, fold.nom), React.createElement(\"p\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Dossier \", fold.nom, \" contenant tous les fichiers du type \", fold.type, \" \"), React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center flex-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        height: \"2px\",\n        width: \"2px\"\n      },\n      className: \"rounded-circle bg-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), \" mp3\"), React.createElement(\"p\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"created at: 17-03-2020\"), React.createElement(Link, {\n      className: \"text-center p-1 bg-light border rounded text-primary\",\n      to: \"#details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-eye p-1\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), \"voire d\\xE9tails\")));\n  }) : React.createElement(\"h3\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \" La Listes est vide \")));\n};\n\nexport default FilesContents;","map":{"version":3,"sources":["D:\\MASTER KEE PROJECT\\MASTER PROJECT\\client\\src\\views\\FilesContents.js"],"names":["React","Link","FilesContents","useState","errors","setError","loading","setLoading","folders","setFolders","fetchData","result","fetch","method","headers","data","json","setTimeout","console","log","error","useEffect","length","map","fold","nom","width","type","height"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Link} from 'react-router-dom';\r\n\r\nconst FilesContents = () => {\r\n    const [errors, setError ] = React.useState([]);\r\n    const [loading, setLoading ] = React.useState(false);\r\n    const [folders, setFolders] = React.useState([]);\r\n    const fetchData = async () => {\r\n       try {\r\n           setLoading(true);\r\n            const result = await fetch(\"http://localhost:9001/dossier/\",{\r\n                method: \"GET\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n\r\n            const data = await result.json();\r\n            setTimeout(function(){setLoading(false);}, 1000);\r\n            setError([]);\r\n            console.log(errors);\r\n            return setFolders(data.folders);\r\n       } catch (error) {\r\n           console.log(error);\r\n           setLoading(false);\r\n           return setError(error);\r\n       }\r\n    }\r\n    React.useEffect(function(){\r\n        fetchData();\r\n    },[])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h3 className=\"font-weight-bold\">Tous les fichiers </h3>\r\n            {loading ? (<h3>loading....</h3>):(\r\n                <div className=\"d-flex flex-wrap justify-content-between\">\r\n                    {folders.length > 0 ? folders.map(function(fold){\r\n                    return <div key={fold.nom} style={{ width:\"48%\"}} className=\"border p-2 mb-2\" >\r\n                                <img className=\"img-circle\" alt=\"image\" />\r\n                                <p className=\"text-primary text-center\">{fold.nom}</p>\r\n                                <p className=\"text-muted\">Dossier {fold.nom} contenant tous les fichiers du type {fold.type} </p>\r\n                                <div className=\"d-flex justify-content-between align-items-center flex-wrap\">\r\n                                    <p className=\"text-success\"><span style={{height: \"2px\" , width:\"2px\"}} className=\"rounded-circle bg-primary\"></span> mp3</p>\r\n                                    <p className=\"text-muted\">created at: 17-03-2020</p>\r\n                                    <Link className=\"text-center p-1 bg-light border rounded text-primary\" to=\"#details\">\r\n                                    <i className=\"fa fa-eye p-1\" aria-hidden=\"true\"></i>   \r\n                                    voire détails</Link>\r\n                                </div>\r\n                            </div>\r\n                    }): (<h3 className=\"text-danger\"> La Listes est vide </h3>)}\r\n                </div>\r\n               \r\n            )}\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default FilesContents;"]},"metadata":{},"sourceType":"module"}