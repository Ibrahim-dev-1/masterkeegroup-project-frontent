{"ast":null,"code":"import { LOGIN } from '../types/types'; // les fonctions \n\nconst login = async (state, payload) => {\n  try {\n    const queryBody = {\n      query: \"\\n                query{\\n                    login(email: \\\"\".concat(payload.email, \"\\\" , password: \\\"\").concat(payload.password, \"\\\") { userId , token , tokenExpiration }\\n                }\\n            \")\n    };\n    const res = await fetch('http://localhost:8000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(queryBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  } catch (err) {\n    throw new Error(err);\n  }\n}; // le reducer\n\n\nconst reducers = (state, action) => {\n  switch (action.type) {\n    case LOGIN:\n      return login(state, action.auth);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducers;","map":{"version":3,"sources":["C:\\Users\\Kratos\\Desktop\\PROJET BTS\\kratos_react\\src\\reducers\\authReducer.js"],"names":["LOGIN","login","state","payload","queryBody","query","email","password","res","fetch","method","body","JSON","stringify","headers","err","Error","reducers","action","type","auth"],"mappings":"AAAA,SAAQA,KAAR,QAAoB,gBAApB,C,CAEA;;AAEA,MAAMC,KAAK,GAAG,OAAOC,KAAP,EAAcC,OAAd,KAA0B;AAEpC,MAAG;AAEC,UAAMC,SAAS,GAAG;AACdC,MAAAA,KAAK,yEAEmBF,OAAO,CAACG,KAF3B,8BAEkDH,OAAO,CAACI,QAF1D;AADS,KAAlB;AAQA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,+BAAD,EACvB;AACIC,MAAAA,MAAM,EAAE,MADZ;AAEIC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,SAAf,CAFV;AAGIU,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAHb,KADuB,CAAvB;AAUH,GApBD,CAoBC,OAAMC,GAAN,EAAU;AACP,UAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN;AACH;AAEJ,CA1BD,C,CA6BA;;;AACA,MAAME,QAAQ,GAAG,CAACf,KAAD,EAAQgB,MAAR,KAAmB;AAChC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKnB,KAAL;AACI,aAAOC,KAAK,CAACC,KAAD,EAAQgB,MAAM,CAACE,IAAf,CAAZ;;AACJ;AACI,aAAOlB,KAAP;AAJR;AAOH,CARD;;AASA,eAAee,QAAf","sourcesContent":["import {LOGIN} from '../types/types';\r\n\r\n// les fonctions \r\n\r\nconst login = async (state, payload) => {\r\n\r\n    try{\r\n\r\n        const queryBody = {\r\n            query: `\r\n                query{\r\n                    login(email: \"${payload.email}\" , password: \"${payload.password}\") { userId , token , tokenExpiration }\r\n                }\r\n            `\r\n        }\r\n    \r\n        const res = await fetch('http://localhost:8000/graphql',\r\n        {\r\n            method: 'POST',\r\n            body: JSON.stringify(queryBody),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        \r\n        \r\n    }catch(err){\r\n        throw new Error(err);\r\n    }\r\n  \r\n}\r\n\r\n\r\n// le reducer\r\nconst reducers = (state, action) => {\r\n    switch(action.type ){\r\n        case LOGIN:\r\n            return login(state, action.auth);\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nexport default reducers;"]},"metadata":{},"sourceType":"module"}