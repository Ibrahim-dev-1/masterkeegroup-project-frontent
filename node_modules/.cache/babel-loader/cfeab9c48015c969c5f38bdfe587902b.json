{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Kratos\\\\Desktop\\\\PROJET BTS\\\\kratos_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Kratos\\\\Desktop\\\\PROJET BTS\\\\kratos_react\\\\src\\\\pages\\\\Login\\\\Login.js\";\nimport React from 'react';\nimport { useLoginState, useLoginDispatchState } from '../../contexts/loginContext';\n\nconst Login = props => {\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        myState = _React$useState2[0],\n        setMyState = _React$useState2[1];\n\n  const emailRef = React.createRef();\n  const passwordRef = React.createRef();\n\n  const handleSubmit = ev => {\n    ev.preventDefault();\n    const email = emailRef.current.value.trim();\n    const password = passwordRef.current.value.trim();\n    if (email.length === '' || password.length === '') throw new Error('le email ou le password ne doit pas etre vide ');\n    setMyState();\n    console.log(myState);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"login-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \" Login page \"), React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \" Email \"), React.createElement(\"input\", {\n    type: \"text\",\n    ref: emailRef,\n    id: \"email\",\n    className: \"form-control\",\n    placeholder: \"Entrez votre email \",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \" Password \"), React.createElement(\"input\", {\n    type: \"text\",\n    ref: passwordRef,\n    id: \"password\",\n    className: \"form-control\",\n    placeholder: \"Entrez votre password \",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"login-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \" Login \")))));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:\\Users\\Kratos\\Desktop\\PROJET BTS\\kratos_react\\src\\pages\\Login\\Login.js"],"names":["React","useLoginState","useLoginDispatchState","Login","props","useState","myState","setMyState","emailRef","createRef","passwordRef","handleSubmit","ev","preventDefault","email","current","value","trim","password","length","Error","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,qBAAxB,QAAqD,6BAArD;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA,0BACWJ,KAAK,CAACK,QAAN,EADX;AAAA;AAAA,QACdC,OADc;AAAA,QACJC,UADI;;AAErB,QAAMC,QAAQ,GAAGR,KAAK,CAACS,SAAN,EAAjB;AACA,QAAMC,WAAW,GAAGV,KAAK,CAACS,SAAN,EAApB;;AAEA,QAAME,YAAY,GAAIC,EAAF,IAAU;AAC1BA,IAAAA,EAAE,CAACC,cAAH;AAEA,UAAMC,KAAK,GAAGN,QAAQ,CAACO,OAAT,CAAiBC,KAAjB,CAAuBC,IAAvB,EAAd;AACA,UAAMC,QAAQ,GAAGR,WAAW,CAACK,OAAZ,CAAoBC,KAApB,CAA0BC,IAA1B,EAAjB;AAEA,QAAGH,KAAK,CAACK,MAAN,KAAiB,EAAjB,IAAuBD,QAAQ,CAACC,MAAT,KAAoB,EAA9C,EACI,MAAM,IAAIC,KAAJ,CAAU,gDAAV,CAAN;AAEJb,IAAAA,UAAU;AACVc,IAAAA,OAAO,CAACC,GAAR,CAAYhB,OAAZ;AACH,GAXD;;AAaA,SACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAEK,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAyB,IAAA,OAAO,EAAC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,GAAG,EAAEH,QAAxB;AAAmC,IAAA,EAAE,EAAC,OAAtC;AAA8C,IAAA,SAAS,EAAC,cAAxD;AAAuE,IAAA,WAAW,EAAC,qBAAnF;AAAyG,IAAA,QAAQ,MAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAKI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAyB,IAAA,OAAO,EAAC,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAoB,IAAA,GAAG,EAAEE,WAAzB;AAAsC,IAAA,EAAE,EAAC,UAAzC;AAAoD,IAAA,SAAS,EAAC,cAA9D;AAA6E,IAAA,WAAW,EAAC,wBAAzF;AAAkH,IAAA,QAAQ,MAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CALJ,EASI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CATJ,CAFJ,CADJ,CADJ;AAoBH,CAtCD;;AAwCA,eAAeP,KAAf","sourcesContent":["import React from 'react';\r\nimport { useLoginState, useLoginDispatchState } from '../../contexts/loginContext';\r\n\r\nconst Login = (props) => {\r\n    const [myState , setMyState ] = React.useState();\r\n    const emailRef = React.createRef();\r\n    const passwordRef = React.createRef();\r\n\r\n    const handleSubmit =( ev ) => {\r\n        ev.preventDefault();\r\n        \r\n        const email = emailRef.current.value.trim();\r\n        const password = passwordRef.current.value.trim();\r\n\r\n        if(email.length === '' || password.length === '')\r\n            throw new Error('le email ou le password ne doit pas etre vide ');\r\n        \r\n        setMyState()\r\n        console.log(myState);\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className=\"login\">\r\n                <h1> Login page </h1>\r\n                <form className=\"form\" onSubmit={handleSubmit}>\r\n                    <div className=\"form-input\">\r\n                        <label className=\"label\" htmlFor=\"email\"> Email </label>\r\n                        <input type=\"text\" ref={emailRef}  id=\"email\" className=\"form-control\" placeholder=\"Entrez votre email \" required />\r\n                    </div>\r\n                    <div className=\"form-input\">\r\n                        <label className=\"label\" htmlFor=\"password\"> Password </label>\r\n                        <input type=\"text\"  ref={passwordRef} id=\"password\" className=\"form-control\" placeholder=\"Entrez votre password \" required />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" className=\"login-btn\"> Login </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}