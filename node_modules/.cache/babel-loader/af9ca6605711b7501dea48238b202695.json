{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Kratos\\\\Desktop\\\\PROJET BTS\\\\kratos_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { LOGIN } from '../types/types'; // les fonctions \n\nconst queryBody = {\n  query: \"\\n        query{\\n            login(email: \\\"\".concat(payload.email, \"\\\" , password: \\\"\").concat(payload.password, \"\\\") { userId , token , tokenExpiration }\\n        }\\n    \")\n};\n\nconst login = async (state, payload) => {\n  const res = await fetch('http://localhost:8000/graphql', {\n    method: 'POST',\n    body: JSON.stringify(queryBody),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  console.log('la valeur convertis par la fonction json: ' + JSON.stringify(queryBody));\n  return _objectSpread({}, state, {\n    email: payload.email,\n    password: payload.password\n  });\n}; // le reducer\n\n\nconst reducers = (state, action) => {\n  switch (action.type) {\n    case LOGIN:\n      return login(state, action.auth);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducers;","map":{"version":3,"sources":["C:\\Users\\Kratos\\Desktop\\PROJET BTS\\kratos_react\\src\\reducers\\authReducer.js"],"names":["LOGIN","queryBody","query","payload","email","password","login","state","res","fetch","method","body","JSON","stringify","headers","console","log","reducers","action","type","auth"],"mappings":";;;;;;AAAA,SAAQA,KAAR,QAAoB,gBAApB,C,CAEA;;AACA,MAAMC,SAAS,GAAG;AACdC,EAAAA,KAAK,yDAEmBC,OAAO,CAACC,KAF3B,8BAEkDD,OAAO,CAACE,QAF1D;AADS,CAAlB;;AAOA,MAAMC,KAAK,GAAG,OAAOC,KAAP,EAAcJ,OAAd,KAA0B;AACpC,QAAMK,GAAG,GAAG,MAAMC,KAAK,CAAC,+BAAD,EACvB;AACIC,IAAAA,MAAM,EAAE,MADZ;AAEIC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,SAAf,CAFV;AAGIa,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAHb,GADuB,CAAvB;AASAC,EAAAA,OAAO,CAACC,GAAR,CAAY,+CAA+CJ,IAAI,CAACC,SAAL,CAAeZ,SAAf,CAA3D;AACA,2BAAWM,KAAX;AAAiBH,IAAAA,KAAK,EAACD,OAAO,CAACC,KAA/B;AAAsCC,IAAAA,QAAQ,EAAEF,OAAO,CAACE;AAAxD;AACH,CAZD,C,CAeA;;;AACA,MAAMY,QAAQ,GAAG,CAACV,KAAD,EAAQW,MAAR,KAAmB;AAChC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKnB,KAAL;AACI,aAAOM,KAAK,CAACC,KAAD,EAAQW,MAAM,CAACE,IAAf,CAAZ;;AACJ;AACI,aAAOb,KAAP;AAJR;AAOH,CARD;;AASA,eAAeU,QAAf","sourcesContent":["import {LOGIN} from '../types/types';\r\n\r\n// les fonctions \r\nconst queryBody = {\r\n    query: `\r\n        query{\r\n            login(email: \"${payload.email}\" , password: \"${payload.password}\") { userId , token , tokenExpiration }\r\n        }\r\n    `\r\n}\r\nconst login = async (state, payload) => {\r\n    const res = await fetch('http://localhost:8000/graphql',\r\n    {\r\n        method: 'POST',\r\n        body: JSON.stringify(queryBody),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n\r\n    console.log('la valeur convertis par la fonction json: ' + JSON.stringify(queryBody));\r\n    return {...state,email:payload.email, password: payload.password}\r\n}\r\n\r\n\r\n// le reducer\r\nconst reducers = (state, action) => {\r\n    switch(action.type ){\r\n        case LOGIN:\r\n            return login(state, action.auth);\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nexport default reducers;"]},"metadata":{},"sourceType":"module"}