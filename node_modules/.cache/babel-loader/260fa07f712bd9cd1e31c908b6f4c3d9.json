{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Kratos\\\\Desktop\\\\PROJET BTS\\\\kratos_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Kratos\\\\Desktop\\\\PROJET BTS\\\\kratos_react\\\\src\\\\pages\\\\Division\\\\Divisions.js\";\nimport React, { useEffect } from 'react';\nimport MyStyle from '../../styles/style';\nimport { useDispatchContext, useDivisionState, DivisionProvider } from '../../contexts/divisionContext';\n\nconst Divisions = props => {\n  const divisionState = useDivisionState();\n  const dispatch = useDispatchContext();\n\n  const _React$useState = React.useState({\n    isLoading: true\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        loading = _React$useState2[0],\n        setLoading = _React$useState2[1];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const RequestAddDivision = {\n        query: \"\\n                    query{\\n                       divisions{ id, nom }\\n                    }\\n                \"\n      };\n      const result = await fetch('http://localhost:8000/graphql', {\n        method: \"post\",\n        body: JSON.stringify(RequestAddDivision),\n        headers: {\n          \"content-type\": \"application/json\"\n        }\n      });\n      if (result.status !== 200 && result.status !== 201) throw new Error(\" error de fetch DIVISION datas ERROR STUTS: \" + result.status);\n\n      const _ref = await result.json(),\n            data = _ref.data;\n\n      dispatch({\n        type: \"GET_DIVISIONS\",\n        payload: data.divisions\n      });\n      setLoading({\n        isLoading: !loading.isLoading\n      });\n    };\n\n    fetchData();\n  }, [Divisions]);\n  return React.createElement(\"div\", {\n    className: \"main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, loading.isLoading ? console.log(\"isloading.....\") : console.log(divisionState), React.createElement(\"h1\", {\n    style: MyStyle.titreListDivisions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \" Divisions\"), React.createElement(\"p\", {\n    style: MyStyle.textMuted,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \" Lists de tous les divisions existantes \\xE0 la radio lom\\xE9 \"), React.createElement(\"p\", {\n    style: MyStyle.textMuted,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \" vous pouvez rajout\\xE9 ou modifi\\xE9 , ainsi que les supprim\\xE9s\"), React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"1.5rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"button-addDivision\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    style: {\n      color: \"green\",\n      fontSize: \"1.5rem\",\n      padding: \" 0 0.5rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"+\"), \"Ajout\\xE9 division \")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, loading.isLoading ? React.createElement(\"h2\", {\n    style: {\n      color: \"green\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \" isLoading \") : divisionState.divisions.map(divisio)));\n};\n\nexport default Divisions;","map":{"version":3,"sources":["C:\\Users\\Kratos\\Desktop\\PROJET BTS\\kratos_react\\src\\pages\\Division\\Divisions.js"],"names":["React","useEffect","MyStyle","useDispatchContext","useDivisionState","DivisionProvider","Divisions","props","divisionState","dispatch","useState","isLoading","loading","setLoading","fetchData","RequestAddDivision","query","result","fetch","method","body","JSON","stringify","headers","status","Error","json","data","type","payload","divisions","console","log","titreListDivisions","textMuted","textAlign","padding","color","fontSize","map","divisio"],"mappings":"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","sourcesContent":["import React ,{ useEffect } from 'react';\r\nimport MyStyle from '../../styles/style';\r\n\r\nimport { useDispatchContext, useDivisionState, DivisionProvider } from '../../contexts/divisionContext';\r\n\r\nconst Divisions = (props) => {\r\n\r\n    const divisionState = useDivisionState();\r\n    const dispatch = useDispatchContext();\r\n    const [loading, setLoading ] = React.useState({ isLoading: true });\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const RequestAddDivision = {\r\n                query: `\r\n                    query{\r\n                       divisions{ id, nom }\r\n                    }\r\n                `\r\n            }\r\n        \r\n            const result = await fetch('http://localhost:8000/graphql',{\r\n                method: \"post\",\r\n                body: JSON.stringify(RequestAddDivision),\r\n                headers: {\r\n                    \"content-type\" : \"application/json\"\r\n                }\r\n            })\r\n\r\n            if( result.status !== 200 && result.status !== 201)\r\n                throw new Error(\" error de fetch DIVISION datas ERROR STUTS: \" + result.status)\r\n\r\n            const {data} = await result.json();\r\n            dispatch({ type: \"GET_DIVISIONS\" , payload: data.divisions })\r\n            setLoading({isLoading: !loading.isLoading})\r\n            \r\n        }\r\n        fetchData()\r\n    },[Divisions])\r\n    return (\r\n        <div className=\"main\">\r\n            { loading.isLoading ? console.log(\"isloading.....\") : console.log(divisionState)}\r\n            <h1 style={MyStyle.titreListDivisions}> Divisions</h1>\r\n            <p style={ MyStyle.textMuted }> Lists de tous les divisions existantes à la radio lomé </p>\r\n            <p style={ MyStyle.textMuted }> vous pouvez rajouté ou modifié , ainsi que les supprimés</p>\r\n\r\n            <div style={{ textAlign: \"center\" , padding: \"1.5rem\"}}>\r\n                <button className=\"button-addDivision\">\r\n                    <span style={{ color: \"green\", fontSize: \"1.5rem\" , padding:\" 0 0.5rem\" }}>+</span> \r\n                Ajouté division </button>\r\n            </div>\r\n            <div>\r\n                { loading.isLoading ? (<h2 style={{color: \"green\"}}> isLoading </h2>) : \r\n                    divisionState.divisions.map((divisio))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Divisions;"]},"metadata":{},"sourceType":"module"}